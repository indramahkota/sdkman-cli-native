---
source: src/bin/help/main.rs
expression: render(env_help())
---
[1mNAME[0m
    [3msdk env[0m - sdk subcommand to control SDKs on a project level, setting up
    specific versions for a directory

[1mSYNOPSIS[0m
    [3msdk env [init|install|clear][0m

[1mDESCRIPTION[0m
    Allows the developer to manage the SDK versions used in a project directory.
    The subcommand uses an [4m.sdkmanrc[0m file to install or switch specific SDK
    versions in a project directory.

    When issuing the subcommand without a qualifier, it will switch to the
    versions specified in [4m.sdkmanrc[0m and emit warnings for versions not present
    on the system. In addition, the subcommand has three optional qualifiers.

[1mSUBCOMMANDS & QUALIFIERS[0m
    install      install and switch to the SDK versions specified
                 in [4m.sdkmanrc[0m
    init         allows for the creation of a default [4m.sdkmanrc[0m file with
                 a single entry for the [3mjava[0m candidate, set to the current
                 default value)
    clear        reset all SDK versions to their system defaults

[1mCONFIGURATION[0m
    The [4m.sdkmanrc[0m file contains key-value pairs for each configurable SDK for
    that project environment. You may enable a configuration option for auto-
    env behaviour by setting [3msdkman_auto_env=true[0m in the [4m$SDKMAN_DIR/etc/config[0m
    file. This setting will automatically switch versions when stepping into a
    directory on the presence of a [4m.sdkmanrc[0m descriptor. When enabled, you no
    longer need to issue the [3minstall[0m qualifier explicitly. This behaviour is
    disabled by default. An initial file will have content such as this:

    [3m---
    # Enable auto-env through the sdkman_auto_env config
    # Add key=value pairs of SDKs to use below
    java=11.0.13-tem
    ---[0m

[1mEXAMPLES[0m
    [3msdk env
    sdk env install
    sdk env init
    sdk env clear[0m
